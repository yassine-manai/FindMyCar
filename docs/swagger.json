{
    "swagger": "2.0",
    "info": {
        "title": "Find Your Car",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/fyc/cameras": {
            "get": {
                "description": "Get a list of all cameras",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cameras"
                ],
                "summary": "Get all cameras",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Include extra information if 'yes'",
                        "name": "extra",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of cameras",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pkg.Camera"
                            }
                        }
                    },
                    "404": {
                        "description": "No cameras found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new camera to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cameras"
                ],
                "summary": "Add a new camera",
                "parameters": [
                    {
                        "description": "Camera data",
                        "name": "camera",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.Camera"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Camera created successfully",
                        "schema": {
                            "$ref": "#/definitions/pkg.Camera"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to create a new camera",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/fyc/cameras/{id}": {
            "put": {
                "description": "Update an existing camera by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cameras"
                ],
                "summary": "Update a camera by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Camera ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated camera data",
                        "name": "camera",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.Camera"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Camera updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request payload or ID mismatch",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Camera not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to update camera",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a camera by ID",
                "tags": [
                    "Cameras"
                ],
                "summary": "Delete a camera by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Camera ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Camera deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Camera not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to delete camera",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/fyc/carDetails": {
            "get": {
                "description": "Get a list of all car details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car Details"
                ],
                "summary": "Get all car details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Include extra information if 'yes'",
                        "name": "extra",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pkg.CarDetail"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new car detail to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car Details"
                ],
                "summary": "Add a new car detail",
                "parameters": [
                    {
                        "description": "Car detail data",
                        "name": "CarDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.CarDetail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pkg.CarDetail"
                        }
                    }
                }
            }
        },
        "/fyc/carDetails/{id}": {
            "put": {
                "description": "Update an existing car detail by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car Details"
                ],
                "summary": "Update a car detail by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated car detail data",
                        "name": "CarDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.CarDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.CarDetail"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Car detail not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a car detail by ID",
                "tags": [
                    "Car Details"
                ],
                "summary": "Delete a car detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Car detail ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car detail deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Car detail not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/fyc/carparks": {
            "get": {
                "description": "Get a list of all carparks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carparks"
                ],
                "summary": "Get all carparks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Include extra information if 'yes'",
                        "name": "extra",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pkg.Carpark"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new carpark to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carparks"
                ],
                "summary": "Add a new carpark",
                "parameters": [
                    {
                        "description": "Carpark data",
                        "name": "carpark",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.Carpark"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pkg.Carpark"
                        }
                    }
                }
            }
        },
        "/fyc/carparks/{id}": {
            "get": {
                "description": "Get a specific carpark by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carparks"
                ],
                "summary": "Get carpark by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Carpark ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.Carpark"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing carpark by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carparks"
                ],
                "summary": "Update a carpark",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Carpark ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated carpark data",
                        "name": "carpark",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.Carpark"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.Carpark"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a carpark by ID",
                "tags": [
                    "Carparks"
                ],
                "summary": "Delete a carpark",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Carpark ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Carpark deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/fyc/presentcars": {
            "get": {
                "description": "Get a list of all present cars",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PresentCars"
                ],
                "summary": "Get all present cars",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Include extra information if 'yes'",
                        "name": "extra",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pkg.PresentCar"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing present car by lpn",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PresentCars"
                ],
                "summary": "Update a present car by LPN",
                "parameters": [
                    {
                        "type": "string",
                        "default": "A",
                        "description": "string default",
                        "name": "lpn",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Updated present car data by lpn",
                        "name": "presentCar",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.PresentCar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.PresentCar"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new present car to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PresentCars"
                ],
                "summary": "Add a new present car",
                "parameters": [
                    {
                        "description": "Present Car data",
                        "name": "presentCar",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.PresentCar"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pkg.PresentCar"
                        }
                    }
                }
            }
        },
        "/fyc/presentcars/{id}": {
            "put": {
                "description": "Update an existing present car by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PresentCars"
                ],
                "summary": "Update a present car by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Present Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated present car data",
                        "name": "presentCar",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.PresentCar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.PresentCar"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a present car by ID",
                "tags": [
                    "PresentCars"
                ],
                "summary": "Delete a present car",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Present Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/fyc/presentcars/{lpn}": {
            "get": {
                "description": "Get a specific present car by LPN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PresentCars"
                ],
                "summary": "Get present car by LPN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "License Plate Number",
                        "name": "lpn",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Include extra information if 'yes'",
                        "name": "extra",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.PresentCar"
                        }
                    }
                }
            }
        },
        "/fyc/v1": {
            "get": {
                "description": "Get car information based on LPN, language, and fuzzy logic",
                "tags": [
                    "Test_Version1"
                ],
                "summary": "Get car information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "License Plate Number",
                        "name": "LPN",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Language (EN, AR, etc.)",
                        "name": "L",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuzzy logic setting (On/Off)",
                        "name": "FuzzyLogic",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/fyc/v1/Auth/token": {
            "post": {
                "description": "Generates a JWT token using client ID and client secret.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Generate a JWT token",
                "parameters": [
                    {
                        "description": "Client credentials",
                        "name": "TokenRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.TokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token generated successfully",
                        "schema": {
                            "$ref": "#/definitions/pkg.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Invalid client credentials",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/fyc/zones": {
            "get": {
                "description": "Get a list of all zones",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Zones"
                ],
                "summary": "Get all zones",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Include extra information if 'yes'",
                        "name": "extra",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pkg.Zone"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new zone to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Zones"
                ],
                "summary": "Add a new zone",
                "parameters": [
                    {
                        "description": "Zone data",
                        "name": "zone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.Zone"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pkg.Zone"
                        }
                    }
                }
            }
        },
        "/fyc/zones/{id}": {
            "put": {
                "description": "Update an existing zone by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Zones"
                ],
                "summary": "Update a zone by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated zone data",
                        "name": "zone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.Zone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.Zone"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Zone not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a zone by ID",
                "tags": [
                    "Zones"
                ],
                "summary": "Delete a zone",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Zone deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Zone not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/fyc/zonesImage": {
            "get": {
                "description": "Get a list of all zones images",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Zones Image"
                ],
                "summary": "Get all zones image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Include extra information if 'yes'",
                        "name": "extra",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pkg.ImageZone"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new zone image to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Zones Image"
                ],
                "summary": "Add a new zone Image",
                "parameters": [
                    {
                        "description": "Zone image data",
                        "name": "ImageZone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.ImageZone"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pkg.ImageZone"
                        }
                    }
                }
            }
        },
        "/fyc/zonesImage/{id}": {
            "put": {
                "description": "Update an existing zone image by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Zones Image"
                ],
                "summary": "Update a zone image by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Zone ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated zone image data",
                        "name": "Zone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.ImageZone"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.Zone"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Zone image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a zone image by ID",
                "tags": [
                    "Zones Image"
                ],
                "summary": "Delete a zone image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Zone image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Zone image deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Zone image not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "config.CustomDate": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "pkg.Camera": {
            "type": "object",
            "required": [
                "cam_ip",
                "cam_name",
                "cam_password",
                "cam_port",
                "cam_type",
                "cam_user",
                "direction",
                "extra",
                "zone_id_in",
                "zone_id_out"
            ],
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "cam_ip": {
                    "type": "string"
                },
                "cam_name": {
                    "type": "string"
                },
                "cam_password": {
                    "type": "string"
                },
                "cam_port": {
                    "type": "string"
                },
                "cam_type": {
                    "type": "string"
                },
                "cam_user": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": true
                },
                "zone_id_in": {
                    "type": "integer"
                },
                "zone_id_out": {
                    "type": "integer"
                }
            }
        },
        "pkg.CarDetail": {
            "type": "object",
            "required": [
                "cam_body",
                "extra",
                "image1",
                "image2",
                "image3"
            ],
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "cam_body": {
                    "type": "object",
                    "additionalProperties": true
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": true
                },
                "image1": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "image2": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "image3": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "pkg.Carpark": {
            "type": "object",
            "required": [
                "capacity",
                "extra",
                "language",
                "name",
                "type"
            ],
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "integer"
                },
                "language": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pkg.ImageZone": {
            "type": "object",
            "required": [
                "extra",
                "image_l",
                "image_s",
                "lang",
                "zone_id"
            ],
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": true
                },
                "image_l": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "image_s": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "lang": {
                    "type": "string"
                },
                "zone_id": {
                    "type": "integer"
                }
            }
        },
        "pkg.PresentCar": {
            "type": "object",
            "required": [
                "cameraID",
                "carDetailsID",
                "confidence",
                "currZoneID",
                "direction",
                "extra",
                "lastZoneID",
                "lpn",
                "transactionDate"
            ],
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "cameraID": {
                    "type": "integer"
                },
                "carDetailsID": {
                    "type": "integer"
                },
                "confidence": {
                    "type": "integer"
                },
                "currZoneID": {
                    "type": "integer"
                },
                "direction": {
                    "type": "string"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": true
                },
                "lastZoneID": {
                    "type": "integer"
                },
                "lpn": {
                    "type": "string"
                },
                "transactionDate": {
                    "$ref": "#/definitions/config.CustomDate"
                }
            }
        },
        "pkg.TokenRequest": {
            "type": "object",
            "required": [
                "clientId",
                "clientSecret"
            ],
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            }
        },
        "pkg.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "pkg.Zone": {
            "type": "object",
            "required": [
                "carpark_id",
                "description",
                "extra",
                "max_capacity",
                "name",
                "present",
                "zone_id"
            ],
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "carpark_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": true
                },
                "max_capacity": {
                    "type": "integer"
                },
                "name": {
                    "type": "object",
                    "additionalProperties": true
                },
                "present": {
                    "type": "integer"
                },
                "zone_id": {
                    "type": "integer"
                }
            }
        }
    }
}